{"version":3,"file":"static/js/8.b5bc004b.chunk.js","mappings":"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","sources":["api.jsx","page/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst API_KEY = '02b3fc4c867c86b8e0657790f32792c0'\n\nexport const fetchTrendingMovies = async (controller) => {\n  const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`, {\n  signal: controller.signal\n});\n  return resp.data;\n};\n\nexport const getMoviesDetails = async (movie_id, controller) => {\n  const resp = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`,{\n  signal: controller.signal\n});\n  return resp.data;\n};\n\nexport const getCredits = async (movie_id, controller) => {\nconst resp = await axios.get(`/movie/${movie_id}/credits?api_key=${API_KEY}`, {\n  signal: controller.signal\n});\n  return resp.data;\n};\n\nexport const getReviews = async (movie_id, controller) => {\nconst resp = await axios.get(`/movie/${movie_id}/reviews?api_key=${API_KEY}`, {\n  signal: controller.signal\n});\n  return resp.data;\n};\n\nexport const getSearchMovie = async (searchMovie, controller) => {\nconst resp = await axios.get(`search/movie?query=${searchMovie}&api_key=${API_KEY}`, {\n  signal: controller.signal\n});\n  return resp.data;\n};","import { getSearchMovie } from \"api\"\nimport { useEffect, useState } from \"react\"\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Input, Button } from '@mui/material';\n\n const Movies = () => {\n    const [resultSearchMovie, setResultSearchMovie] = useState([])\n     const [searchParams, setSearchParams] = useSearchParams()\n     \n    const onSubmit = (e) => {\n        e.preventDefault()\n        const wordQuery = e.currentTarget.elements.searchWord.value.trim()\n        if (!wordQuery) {\n           toast.error(\"Fill in the search field!\") \n        }\n        setSearchParams({ searchMovie: wordQuery })\n}\n\n     useEffect(() => {\n         const controller = new AbortController()\n        \n         const searchWord = searchParams.get(\"searchMovie\")\n         \n         if (!searchWord) {\n            \n            return\n        }\n        const querySearchMovie = async () => {\n\n            try {\n                const {results, total_results} = await getSearchMovie(searchWord, controller)\n                setResultSearchMovie([...results])\n                if (total_results === 0) {\n                    return toast.error(\"Sorry, but nothing was found for your request!\")\n                }\n            } catch (error) {     \n            console.log(\"error\", error);\n         }\n        }\n         querySearchMovie()\n         return () => {\n             controller.abort()\n             \n    }\n    \n    }, [searchParams])\n    \n\n\n\n    return (\n        \n        <>\n            <form onSubmit={onSubmit}>\n                <Input className=\"input\" type=\"text\"\n                    autoComplete=\"off\" autoFocus\n                    placeholder=\"Search movies\" name=\"searchWord\"\n                    sx={{ marginLeft: '15px' }} />\n                <Button variant=\"contained\"\n                    type=\"submit\" sx={{ marginLeft: '30px' }}>Search</Button>\n        \n            </form>\n            <section>\n                <ul className=\" p-6\">\n                {resultSearchMovie.map(item => {\n                    return (\n                        <li key={item.id} className=\"font-sans text-blue-600\">\n                            <Link to={`${item.id}`}  >\n                                {!item.title ? item.name : item.title}\n    \n                            </Link>\n                            \n                        </li>     \n                    )\n                    \n                })}\n                    \n                </ul>\n                \n            </section>\n            <Toaster\n  position=\"top-center\"\n  reverseOrder={false}\n/>\n            </>\n    )\n}\n    export default Movies"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","controller","resp","wrap","_context","prev","next","concat","signal","sent","abrupt","data","stop","_x","apply","arguments","getMoviesDetails","_ref2","_callee2","movie_id","_context2","_x2","_x3","getCredits","_ref3","_callee3","_context3","_x4","_x5","getReviews","_ref4","_callee4","_context4","_x6","_x7","getSearchMovie","_ref5","_callee5","searchMovie","_context5","_x8","_x9","_useState","useState","_useState2","_slicedToArray","resultSearchMovie","setResultSearchMovie","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","AbortController","searchWord","get","querySearchMovie","_yield$getSearchMovie","results","total_results","_toConsumableArray","toast","t0","console","log","abort","_jsxs","_Fragment","children","onSubmit","e","preventDefault","wordQuery","currentTarget","elements","value","trim","_jsx","Input","className","type","autoComplete","autoFocus","placeholder","name","sx","marginLeft","Button","variant","map","item","Link","to","id","title","Toaster","position","reverseOrder"],"sourceRoot":""}