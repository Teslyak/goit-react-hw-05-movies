{"version":3,"file":"static/js/8.f9319032.chunk.js","mappings":"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","sources":["api.jsx","page/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '02b3fc4c867c86b8e0657790f32792c0';\n\nexport const fetchTrendingMovies = async controller => {\n  const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return resp.data;\n};\n\nexport const getMoviesDetails = async (movie_id, controller) => {\n  const resp = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return resp.data;\n};\n\nexport const getCredits = async (movie_id, controller) => {\n  const resp = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return resp.data;\n};\n\nexport const getReviews = async (movie_id, controller) => {\n  const resp = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return resp.data;\n};\n\nexport const getSearchMovie = async (searchMovie, controller) => {\n  const resp = await axios.get(\n    `search/movie?query=${searchMovie}&api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return resp.data;\n};\n","import { getSearchMovie } from 'api';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Input, Button } from '@mui/material';\n\nconst Movies = () => {\n  const [resultSearchMovie, setResultSearchMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const onSubmit = e => {\n    e.preventDefault();\n    const wordQuery = e.currentTarget.elements.searchWord.value.trim();\n    if (!wordQuery) {\n      toast.error('Fill in the search field!');\n    }\n    setSearchParams({ searchMovie: wordQuery });\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const searchWord = searchParams.get('searchMovie');\n\n    if (!searchWord) {\n      return;\n    }\n    const querySearchMovie = async () => {\n      try {\n        const { results, total_results } = await getSearchMovie(\n          searchWord,\n          controller\n        );\n        setResultSearchMovie([...results]);\n        if (total_results === 0) {\n          return toast.error('Sorry, but nothing was found for your request!');\n        }\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n    querySearchMovie();\n    return () => {\n      controller.abort();\n    };\n  }, [searchParams]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <Input\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"searchWord\"\n          sx={{ marginLeft: '15px' }}\n        />\n        <Button variant=\"contained\" type=\"submit\" sx={{ marginLeft: '30px' }}>\n          Search\n        </Button>\n      </form>\n      <section>\n        <ul className=\" p-6\">\n          {resultSearchMovie.map(item => {\n            return (\n              <li key={item.id} className=\"font-sans text-blue-600\">\n                <Link to={`${item.id}`} state={{ from: location }}>\n                  {!item.title ? item.name : item.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n      <Toaster position=\"top-center\" reverseOrder={false} />\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","controller","resp","wrap","_context","prev","next","concat","signal","sent","abrupt","data","stop","_x","apply","arguments","getMoviesDetails","_ref2","_callee2","movie_id","_context2","_x2","_x3","getCredits","_ref3","_callee3","_context3","_x4","_x5","getReviews","_ref4","_callee4","_context4","_x6","_x7","getSearchMovie","_ref5","_callee5","searchMovie","_context5","_x8","_x9","_useState","useState","_useState2","_slicedToArray","resultSearchMovie","setResultSearchMovie","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","AbortController","searchWord","get","querySearchMovie","_yield$getSearchMovie","results","total_results","_toConsumableArray","toast","t0","console","log","abort","_jsxs","_Fragment","children","onSubmit","e","preventDefault","wordQuery","currentTarget","elements","value","trim","_jsx","Input","className","type","autoComplete","autoFocus","placeholder","name","sx","marginLeft","Button","variant","map","item","Link","to","id","state","from","title","Toaster","position","reverseOrder"],"sourceRoot":""}